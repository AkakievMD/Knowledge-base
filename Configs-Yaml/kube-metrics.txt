apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: metrics
  labels:
    app.kubernetes.io/created-by: resource-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kube-state-metrics
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: kube-state-metrics
    spec:
      containers:
        - name: kube-state-metrics
          image: 'k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.0.0'
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 150Mi
            requests:
              cpu: 10m
              memory: 32Mi
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: kube-state-metrics
      serviceAccount: kube-state-metrics
      securityContext: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10