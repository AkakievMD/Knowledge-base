------------------------------------------------------------------------------------------------------------------iptables------------------------------------------------------------------------------------------------------------
-A добавление нового правила. -p протокол. --dport порт. -m модуль. -s источник. -j действие. -i входной сетевой интерфейс. -o исходящий сетевой интерфейс. Конфиг /etc/sysconfig/iptables
-A INPUT/OUTPUT -s 192.168.80.1/24 -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT/DROP/LOG --log-prefix "error" (ACCEPT, DROP или LOG входящий или исходящий трафик по порту и ip)
-A INPUT/OUTPUT -p tcp -m state --state NEW -m tcp --dport 67 -j ACCEPT/DROP/LOG --log-prefix "error" (разрешаем, запрещаем или логируем входящий или исходящий трафик по указанному порту)
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT (разрешаем уже установленное соединение в обе стороны)
-A INPUT -p tcp -m tcp --dport 80 -m limit --limit 20/minute --limit-burst 100 -j ACCEPT(от DDos, значения подбираются индивидуально для каждого сервера исходя из рабочей нагрузки на него)
--limit 20/minute максимальная средняя частота положительных результатов в секунду, минуту, час, день. После числа можно указывать единицы second, minute, hour, day
--limit-burst number ограничивает исходное число пропускаемых пакетов - это число увеличивается на единицу каждый раз когда ограничение на частоту положительных результатов не достигается 

Типы правил - Существует три типа правил iptables — input, forward и output.
Input — Такие цепочки используются для контроля поведения входящих соединений. К примеру, если пользователь попробует подключиться к серверу по SSH, 
то iptables сравнит его IP-адрес со своим списком, чтобы разрешить или запретить доступ.
Forward — Правила этого типа используются для обработки входящих сообщений, конечный пункт назначения которых не является текущим сервером. 
К примеру, в случае маршрутизатора, к нему подключаются многие пользователи и приложения, но данные не посылаются на сам маршрутизатор, они лишь передаются ему, 
чтобы он мог перенаправить их адресату. Если вы не занимаетесь настройкой маршрутизации или NAT, то правила этого типа использовать в работе не будете.
Output — Такие цепочки используются для исходящих соединений. К прмиеру, если пользователь пытается отправинг запрос ping к сайту 1cloud.ru, 
iptables изучит цепочку правил, чтобы понять, что нужно делать в случае ping и этого сайт, и только потом разрешит или запретит соединение.

Действия с соединениями - После настройки поведения межсетевого экрана по умолчанию, можно переходить к созданию правил обработки трафика, чтобы iptables понимал, 
что делать с конкретным соединением. Ниже мы рассмотрим три основных вида действий с соединениями.
Accept — разрешить соединение;
Drop — игнорировать соединение, вести себя так, будто его никогда не было. Действие подходит для случаев, когда нужно сделать так, чтобы источник запроса не узнал о его блокировке.
Reject — заблокировать соединение и отправить в ответ сообщение об ошибке действие подходит для тех случаев когда владелец сервера хочет дать понять что соединение заблокировано файрволом
LOG - сделать запись о пакете в лог файл; QUEUE - отправить пакет пользовательскому приложению.
MARK — позволяет помечать определенные пакеты, например для маршрутизации, данная метка перестает существовать, как только пакет покинет брандмауэр;
CONNMARK — то же самое, что и MARK, только для соединений; QUEUE — отправляет пакет в очередь приложению для дальнейшего взаимодействия;
RETURN — прекращение движения пакета по текущей цепочке и возврат в предыдущую цепочку. Если текущая цепочка единственная — к пакету будет применено действие по умолчанию;
REDIRECT — перенаправляет пакет на указанный порт, в пределах этого же узла, применяется для реализации «прозрачного» прокси;
DNAT — подменяет адрес получателя в заголовке IP-пакета, основное применение — предоставление доступа к сервисам снаружи, находящимся внутри сети;
SNAT — для преобразования сетевых адресов, применимо, когда за сервером находятся машины, которым необходимо предоставить доступ в Интернет, при этом от провайдера имеется статический IP
MASQUERADE — то же, что и SNAT, но главное отличие, может использоваться, когда провайдер предоставляет динамический адрес, создаёт дополнительную нагрузку на систему по сравнению с SNAT
TOS — позволяет управлять битами в одноименном поле заголовка IP-пакета; ULOG — более продвинутый вариант записи информации, может писать как в обычный текстовый файл, так и в базу данных
TTL — используется для изменения значения поля одноименного заголовка IP-пакета, устанавливает время жизни пакета.

Таблица mangle - Предназначена для модификации заголовков сетевых пакетов, таких параметров как ToS (Type of Service), TTL (Time To Live), MARK. Содержит все существующие пять цепочек.
Таблица nat - для трансляции сетевых адресов подмены адреса получателя/отправителя применяется если сервер используется в качестве маршрутизатора. Цепочки PREROUTING, OUTPUT, POSTROUTING
Таблица filter - служит для фильтрации пакетов, именно здесь происходит принятие решений о разрешении или запрете дальнейшего движения пакета в системе. Цепочки INPUT, FORWARD и OUTPUT.

NEW - пакеты, устанавливающие новое соединение. ESTABLISHED - пакеты, принадлежащие установленному соединению. RELATED - пакеты, не принадлежащие установленному соединению 
Пакеты, являющиеся частью новых соединений, инициированые уже установленным ESTABLISHED соединением
INVALID — помечаются пакеты, которые не связаны ни с одним из существующих соединений, и не могут создать новое, их невозможно идентифицировать. 
В целях безопасности рекомендуется остановить движение таких пакетов по системе, используя действие DROP.

prerouting - в эту цепочку пакет попадает перед обработкой iptables, система еще не знает куда он будет отправлен, в input, output или forward;
postrouting - сюда попадают все проходящие пакеты, которые уже прошли цепочку forward

------------------------------------------------------------------------------------------------------------------firewalld------------------------------------------------------------------------------------------------------------
Зоны: drop - блокировать все входящие пакеты, разрешить только исходящие, block - в отличие от предыдущего варианта отправителю пакета будет отправлено сообщение по блокировке его пакета, trusted - всё разрешено.
public - поддерживаются входящие соединения только для ssh и dhclient, external - поддерживает NAT для скрытия внутренней сети, home - аналогично internal, work - разрешенны сервисы ssh и dhcp,
internal - разрешены сервисы ssh, samba, mdns и dhcp, dmz - используется для изолированных сервров, у которых нет доступа к сети. Разрешено только подключение по SSH

Ключи: --state - вывести состояние брандмауэра, --reload - перезагрузить правила из постоянной конфигурации, --complete-reload - жёсткая перезагрузка правил с разрывом всех соединений, --add-masquerade - включить NAT
--runtime-to-permanent - перенести настройки конфигурации runtime в постоянную конфигурацию, --permanent - использовать постоянную конфигурацию, --get-default-zone - отобразить зону, используемую по умолчанию
--set-default-zone - установить зону по умолчанию, --get-active-zones - отобразить активные зоны, --get-zones - отобразить все доступные зоны, --get-services - вывести предопределенные сервисы, --remove-masquerade - удалить NAT
--list-all-zones - вывести конфигурацию всех зон, --new-zone - создать новую зону, --delete-zone - удалить зону, --list-all - вывести всё, что добавлено, из выбранной зоны, --list-services - вывести все сервисы, добавленные к зоне
--add-service - добавить сервис к зоне, --remove-service - удалить сервис из зоны, --list-ports - отобразить порты, добавленные к зоне, --add-port - добавить порт к зоне, --remove-port - удалить порт из зоны
--query-port - показать, добавлен ли порт к зоне, --list-protocols - протоколы, добавленные к зоне, --add-protocol - добавить протокол к зоне, --remove-protocol - удалить протокол из зоны, --list-rich-rules - засширенные правила
--list-source-ports - вывести порты источника, добавленные к зоне, --add-source-port - добавить порт-источник к зоне, --remove-source-port - удалить порт-источник из зоны, --list-icmp-blocks - вывести список блокировок icmp
--add-icmp-block - добавить блокировку icmp, --add-icmp-block - удалить блокировку icmp, --add-forward-port - добавить порт для перенаправления в NAT, --remove-forward-port - удалить порт для перенаправления в NAT
--add-source=ip-address/mask - добавить источник, --remove-source=ip-address/mask - удалить источник, --add-rich-rule 'rule family="ipv4" source address=135.152.53.5 port port=22 protocol=tcp reject - пример расширенной конфигурации

firewall-cmd ключи (для управления без указания зон) firewall-cmd --permanent --zone=зона ключи (Для управления зонами) rule family="ipv4/ipv6" source/destination назначение log audit действие (синтаксис расширенной конфигурации)
firewall-cmd --zone=publiс --add-forward-port=port=2223:proto=tcp:toport=22:toaddr=192.168.56.4 (пример проброса с адресом и без)

source и destination - это отправитель и получатель пакета. В качестве этих параметров может быть использован IP-адрес (address), сервис (service name), порт (port), протокол (protocol) и так далее
log - позволяет логгировать прохождение пакетов, например в syslog. В этой настройке можно указать префикс строчки лога и уровень подробности логгирования
audit - это альтернативный способ логгирования, когда сообщения будут отправляться в службу auditd, Действие которое необходимо выполнить с совпавшим пакетом - accept, drop, reject, mark

-------------------------------------------------------------------------------------------------------------------DHCP on CentOS7----------------------------------------------------------------------------------------------------
yum install dhcp
отредактировать файл по пути /etc/sysconfig/network-scripts/ifcfg-имя сетевухи (так как dhcp сервер должен иметь статические настройки)
добавить и изменить эти параметры в сетевухе для dhcp BOOTPROTO=static IPADDR=из вашей подсети PREFIX=из вашей подсети GATEWAY=ip роутера или того что будет шлюзом DNS1=можно ip роутера
systemctl restart network
-A INPUT -p tcp -m state --state NEW -m tcp --dport 67 -j ACCEPT (открываем порт для dhcp через iptables, конфиг здесь /etc/sysconfig/iptables) 
systemctl restart iptables
/etc/dhcp/dhcpd.conf (конфиг)
systemctl start dhcpd
systemctl enable dhcpd
---example of config---
option domain-name "angeloT2";   
option domain-name-servers 192.168.43.1;
default-lease-time 32400;
max-lease-time 604800;
min-lease-time 7200;
subnet 192.168.43.0 netmask 255.255.255.0 {
 range 192.168.43.40 192.168.43.50;
 option routers 192.168.43.1;
 option subnet-mask 255.255.255.0;
 option broadcast-address 192.168.43.255;

group {
  option domain-name-servers 192.168.43.1;

host angeloT1 {
  option host-name "angeloT1";
  hardware ethernet 00:0c:29:9c:26:a1;
  fixed-address 192.168.43.55;
}
host maylo {
  option host-name "maylo";
  hardware ethernet 00:0c:29:49:71:d9;
  fixed-address 192.168.43.23;
}
}
}

-------------------------------------------------------------------------------------------------------------Сетевые утилиты и команды---------------------------------------------------------------------------------------------
nmcli connection reload(перезагрузка всей кофигурации после изменений в файлах /etc/sysconfig/network-scripts/ifcfg-имя сетевухи и прочие файлы или /etc/NetworkManager/прочие файлы)
nmcli -p device status (посмотреть состояние интерфейсов) nmcli -p general status(Состояние NetworkManager) nmcli connection show(покажет NAME, UUID, TYPE, DEVICE это - Профиль connection)
nmcli connection up/down id ens33(вкл/выкл профиля интерфейса - значение поля connection, их может быть не одно у одного device) nmcli device connect/disconnect ens33(вкл/выкл устройство)
nmcli connection add type ethernet/bridge/... con-name имя подключения ifname имя сетевухи(создать тип подключения для интерфейса и привязать, конфиги здесь /etc/sysconfig/network-scripts)
nmcli connection show имя типа подключения жмем enter (что бы посмотреть список опций для изменения для типа подключения) 
nmcli connection modify имя подключения имя опции значение параметра для опции (что бы изменить или добавить значения параметров для типа подключения)
netstat -pnltu (показывает номер открытого порта, PID услуги, название программы, прослушиваемые сокеты, TCP и UDP-соединения)
ssh root@111.222.222.333(ssh из терминала) ssh-keygen (создать ключи) ssh-copy-id root@111.222.333.444 (закинуть публичный ключ на удаленную тачку) ip link add name dum0 type dummy (добавить интерфейс)
ip route add 192.168.43.0/24 via 192.168.43.1 dev имя сетевухи (добавить маршрут через который будет идти трафик до перезагрузки, это может быть другая сетевая карта или роутер)
ip link set dev ens33 up/down mtu 1500 (вк/выкл устройства) (строчкой ниже указаны поля которые нужно либо изменить, либо добавить в файл если хотим задать статические настройки)
BOOTPROTO=static IPADDR=10.16.103.52 PREFIX=24 GATEWAY=10.16.103.1 DNS1=8.8.8.8 DNS2=8.8.4.4 ONBOOT=yes ZONE=public  DOMAIN=cluster.local (редактировать в файле по пути /etc/sysconfig/network-scripts/ifcfg-имя сетевухи)