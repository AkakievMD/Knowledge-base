Резидентная память данных
РПД является наиболее гибким адресным пространством, которое позволяет реализовать режимы прямой, регистровой, косвенной и битовой адресации. РПД состоит из таких областей:  1) ОЗУ объемом 128 байтов - адреса 00...7FH (0..127);  2) Блок регистров специальных функций (РСФ) - содержит 20 однобайтовых регистров, размещенных по адресам, кратным 8, в диапазоне 80...FFH (128-255). Другие адреса из этой области недоступные и являются ошибочными. Внутреннее ОЗУ предполагает прямую и косвенную адресацию, а банки рабочих регистров, которые входят в него, - также и регистровую адресацию.

Виртуа́льная па́мять - это адресное пространство выделеное конкретному процессу, то есть, диапозон адресов которыми можно аперировать. Они не обязаны как-то быть выражены физической памятью, например, приложение запросило много памяти, но пока никак не использует, железную память можно пока никак не тратить, если есть необходимость сделать запись, то может быть сопоставлено адресное пространство виртуальной памяти с физическим адресным пространством оперативной памяти комьпютера, в таком случае выделяется резидентная память и в нее сохраняется значение. Это метод управления памятью компьютера позволяющий выполнять программы, требующие больше оперативной памяти, чем имеется в компьютере, путём автоматического перемещения частей программы между основной памятью и вторичным хранилищем (например, жёстким диском). 
Для выполняющейся программы данный метод полностью прозрачен и не требует дополнительных усилий со стороны программиста, однако реализация этого метода требует как аппаратной поддержки, так и поддержки со стороны операционной системы.
В системе с виртуальной памятью используемые программами адреса, называемые виртуальными адресами, транслируются в физические адреса в памяти компьютера. Трансляцию виртуальных адресов в физические выполняет аппаратное обеспечение, называемое блоком управления памятью. Для программы основная память выглядит как доступное и непрерывное адресное пространство либо как набор непрерывных сегментов, вне зависимости от наличия у компьютера соответствующего объёма оперативной памяти. Управление виртуальными адресными пространствами, соотнесение физической и виртуальной памяти, а также перемещение фрагментов памяти между основным и вторичным хранилищами выполняет операционная система (см. подкачка страниц).
Виртуальная память-это представление RAM плюс, возможно, некоторое пространство подкачки, предоставляемое менеджером виртуальной памяти. Современные OSs имеют менеджеры виртуальной памяти и предоставляют виртуальную память процессам, чтобы исполняющая программа могла вести себя так, как если бы у нее было непрерывное адресное пространство, размер которого не ограничен фактическим RAM. Страницы или блоки, составляющие виртуальную память, могут быть сопоставлены в любом месте RAM, так что виртуальные страницы contiguos должны храниться в областях contiguos RAM. Или они могут быть заменены на пространство страницы или пространство подкачки, ожидая там до тех пор, пока это не потребуется, после чего они будут прочитаны OS и сопоставлены с какой-либо страницей RAM. Некоторые или все страницы памяти, принадлежащие процессу, могут быть заменены
Применение виртуальной памяти позволяет:
освободить программиста от необходимости вручную управлять загрузкой частей программы в память и согласовывать использование памяти с другими программами
предоставлять программам больше памяти, чем физически установлено в системе
в многозадачных системах изолировать выполняющиеся программы друг от друга путём назначения им непересекающихся адресных пространств (см. защита памяти)
В настоящее время виртуальная память аппаратно поддерживается в большинстве современных процессоров. В то же время в микроконтроллерах и в системах специального назначения, где либо требуется очень быстрая работа, либо есть ограничения на длительность отклика (системы реального времени), виртуальная память используется относительно редко. Также в таких системах реже встречается многозадачность и сложные иерархии памяти.
Страничная память
В большинстве современных операционных систем виртуальная память организуется с помощью страничной адресации. Оперативная память делится на страницы: области памяти фиксированной длины (например, 4096 байт[13]), которые являются минимальной единицей выделяемой памяти (то есть даже запрос на 1 байт от приложения приведёт к выделению ему страницы памяти). Исполняемый процессором пользовательский поток обращается к памяти с помощью адреса виртуальной памяти, который делится на номер страницы и смещение внутри страницы. Процессор преобразует номер виртуальной страницы в адрес соответствующей ей физической страницы при помощи буфера ассоциативной трансляции (TLB). Если ему не удалось это сделать, то требуется дозаполнение буфера путём обращения к таблице страниц (так называемый Page Walk), что может сделать либо сам процессор, либо операционная система (в зависимости от архитектуры)
Если страница была выгружена из оперативной памяти, то операционная система подкачивает страницу с жёсткого диска в ходе обработки события Page fault (см. свопинг, подкачка страниц). При запросе на выделение памяти операционная система может «сбросить» на жёсткий диск страницы, к которым давно не было обращений. Критические данные (например, код запущенных и работающих программ, код и память ядра системы) обычно находятся в оперативной памяти (исключения существуют, однако они не касаются тех частей, которые отвечают за обработку аппаратных прерываний, работу с таблицей страниц и использование файла подкачки).
Сегментная адресация памяти
Механизм организации виртуальной памяти, при котором виртуальное пространство делится на части произвольного размера — сегменты. Этот механизм позволяет, к примеру, разбить данные процесса на логические блоки.[15] Для каждого сегмента, как и для страницы, могут быть назначены права доступа к нему пользователя и его процессов. При загрузке процесса часть сегментов помещается в оперативную память (при этом для каждого из этих сегментов операционная система подыскивает подходящий участок свободной памяти), а часть сегментов размещается в дисковой памяти. Сегменты одной программы могут занимать в оперативной памяти несмежные участки. Во время загрузки система создает таблицу сегментов процесса (аналогичную таблице страниц), в которой для каждого сегмента указывается начальный физический адрес сегмента в оперативной памяти, размер сегмента, правила доступа, признак модификации, признак обращения к данному сегменту за последний интервал времени и некоторая другая информация. 
Если виртуальные адресные пространства нескольких процессов включают один и тот же сегмент, то в таблицах сегментов этих процессов делаются ссылки на один и тот же участок оперативной памяти, в который данный сегмент загружается в единственном экземпляре. Система с сегментной организацией функционирует аналогично системе со страничной организацией: время от времени происходят прерывания, связанные с отсутствием нужных сегментов в памяти, при необходимости освобождения памяти некоторые сегменты выгружаются, при каждом обращении к оперативной памяти выполняется преобразование виртуального адреса в физический. Кроме того, при обращении к памяти проверяется, разрешен ли доступ требуемого типа к данному сегменту.
Виртуальный адрес при сегментной организации памяти может быть представлен парой (g, s), где g — номер сегмента, а s — смещение в сегменте. Физический адрес получается путём сложения начального физического адреса сегмента, найденного в таблице сегментов по номеру g, и смещения s.
Недостатком данного метода распределения памяти является фрагментация на уровне сегментов и более медленное по сравнению со страничной организацией преобразование адреса.
Существует также гибридная странично-сегментная организация виртуальной памяти

Socket (разъём) — название программного интерфейса для обеспечения обмена данными между процессами. Процессы при таком обмене могут исполняться как на одной ЭВМ, так и на различных ЭВМ, связанных между собой сетью. Сокет — абстрактный объект, представляющий конечную точку соединения

Сетевые пространства имен - они обеспечивают изоляцию системных ресурсов связанные с сетью: сетевые устройства, IPv4 и IPv6 стеки протоколов, таблицы IP-маршрутизации, правила брандмауэра, / proc / net каталог (который является символической ссылкой на / proc / PID / net), Каталог / sys / class / net, различные файлы в / proc / sys / net, порт числа (розетки) и так далее. Кроме того, сетевые пространства имен изолировать пространство имен абстрактного сокета домена UNIX Физическое сетевое устройство может находиться только в одной сети. пространство имен. Когда пространство имен сети освобождено (т. Е. Когда последний процесс в пространстве имен завершается), его физическая сеть устройства возвращаются в исходное сетевое пространство имен (не в родитель процесса). Пара устройств виртуальной сети (veth (4)) обеспечивает конвейерную абстракция, которую можно использовать для создания туннелей между сетью пространства имен, и может использоваться для создания моста к физическому сетевое устройство в другом 
пространстве имен. Когда пространство имен освобождается, находящиеся в нем устройства veth (4) уничтожены. Для использования сетевых пространств имен требуется настроенное ядро. с опцией CONFIG_NET_NS.