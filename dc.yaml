kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: {{ .Values.app }}
  labels:
    app: gpnsm-front
    label: gpnsm
    service: {{ .Values.app }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 1
  selector:
    deploymentconfig: {{ .Values.app }}
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: gpnsm-front
        deploymentconfig: {{ .Values.app }}
    spec:
      containers:
        - env:
          {{- range $key, $val := .Values.env.deploy }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          image: 'docker.nexus.okd.local:5000/{{ .Values.image.source.ref }}/{{ .Values.app }}:latest'
          imagePullPolicy: Always
          name: {{ .Values.app }}
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 4
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
{{ toYaml .Values.resources.run | indent 12}}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
            - name: SCRAPE_URI
              value: http://localhost:8080/metrics
            - name: TELEMETRY_PATH
              value: /metrics
            - name: NGINX_RETRIES
              value: '10'
          image: docker.nexus.okd.local:5000/nginx/nginx-prometheus-exporter:0.8.0
          imagePullPolicy: IfNotPresent
          name: monitoring
          ports:
            - containerPort: 9113
              protocol: TCP
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: nexus-docker
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange